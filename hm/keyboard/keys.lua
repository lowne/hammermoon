---Key names and codes
-- @module hm.keyboard.keys
-- @static

local c=require'objc'
c.load'Carbon.HIToolbox'
local coll=require'hm.types.coll'

local keyOrder={
  c.kVK_Command,
  c.kVK_Control,
  c.kVK_Option,
  c.kVK_Shift,
  c.kVK_Function,
  --276:  kVK_RightShift                = 0x3C,
  --277:  kVK_RightOption               = 0x3D,
  --278:  kVK_RightControl              = 0x3E,
  c.kVK_CapsLock,
  c.kVK_Escape,
  c.kVK_Help,
  c.kVK_Return,
  c.kVK_Tab,
  c.kVK_Delete,
  c.kVK_ForwardDelete,
  c.kVK_PageUp,
  c.kVK_PageDown,
  c.kVK_Home,
  c.kVK_End,
  c.kVK_LeftArrow,
  c.kVK_RightArrow,
  c.kVK_UpArrow,
  c.kVK_DownArrow,
  c.kVK_Space,

  c.kVK_F1,
  c.kVK_F2,
  c.kVK_F3,
  c.kVK_F4,
  c.kVK_F5,
  c.kVK_F6,
  c.kVK_F7,
  c.kVK_F8,
  c.kVK_F9,
  c.kVK_F10,
  c.kVK_F11,
  c.kVK_F12,
  c.kVK_F13,
  c.kVK_F14,
  c.kVK_F15,
  c.kVK_F16,
  c.kVK_F17,
  c.kVK_F18,
  c.kVK_F19,
  c.kVK_F20,
  c.kVK_ANSI_KeypadDecimal,
  c.kVK_ANSI_KeypadMultiply,
  c.kVK_ANSI_KeypadPlus,
  c.kVK_ANSI_KeypadDivide,
  c.kVK_ANSI_KeypadMinus,
  c.kVK_ANSI_KeypadEquals,
  c.kVK_ANSI_Keypad0,
  c.kVK_ANSI_Keypad1,
  c.kVK_ANSI_Keypad2,
  c.kVK_ANSI_Keypad3,
  c.kVK_ANSI_Keypad4,
  c.kVK_ANSI_Keypad5,
  c.kVK_ANSI_Keypad6,
  c.kVK_ANSI_Keypad7,
  c.kVK_ANSI_Keypad8,
  c.kVK_ANSI_Keypad9,
  c.kVK_ANSI_KeypadClear,
  c.kVK_ANSI_KeypadEnter,
  c.kVK_ANSI_Grave,
  c.kVK_ANSI_Equal,
  c.kVK_ANSI_Minus,
  c.kVK_ANSI_Comma,
  c.kVK_ANSI_Slash,
  c.kVK_ANSI_Period,
  c.kVK_ANSI_RightBracket,
  c.kVK_ANSI_LeftBracket,
  c.kVK_ANSI_Quote,
  c.kVK_ANSI_Semicolon,
  c.kVK_ANSI_Backslash,
  c.kVK_ISO_Section,
  c.kVK_ANSI_A,
  c.kVK_ANSI_B,
  c.kVK_ANSI_C,
  c.kVK_ANSI_D,
  c.kVK_ANSI_E,
  c.kVK_ANSI_F,
  c.kVK_ANSI_G,
  c.kVK_ANSI_H,
  c.kVK_ANSI_I,
  c.kVK_ANSI_J,
  c.kVK_ANSI_K,
  c.kVK_ANSI_L,
  c.kVK_ANSI_M,
  c.kVK_ANSI_N,
  c.kVK_ANSI_O,
  c.kVK_ANSI_P,
  c.kVK_ANSI_Q,
  c.kVK_ANSI_R,
  c.kVK_ANSI_S,
  c.kVK_ANSI_T,
  c.kVK_ANSI_U,
  c.kVK_ANSI_V,
  c.kVK_ANSI_W,
  c.kVK_ANSI_X,
  c.kVK_ANSI_Y,
  c.kVK_ANSI_Z,
  c.kVK_ANSI_0,
  c.kVK_ANSI_1,
  c.kVK_ANSI_2,
  c.kVK_ANSI_3,
  c.kVK_ANSI_4,
  c.kVK_ANSI_5,
  c.kVK_ANSI_6,
  c.kVK_ANSI_7,
  c.kVK_ANSI_8,
  c.kVK_ANSI_9,
}


local VKs={
  [c.kVK_ANSI_A]='a',
  [c.kVK_ANSI_B]='b',
  [c.kVK_ANSI_C]='c',
  [c.kVK_ANSI_D]='d',
  [c.kVK_ANSI_E]='e',
  [c.kVK_ANSI_F]='f',
  [c.kVK_ANSI_G]='g',
  [c.kVK_ANSI_H]='h',
  [c.kVK_ANSI_I]='i',
  [c.kVK_ANSI_J]='j',
  [c.kVK_ANSI_K]='k',
  [c.kVK_ANSI_L]='l',
  [c.kVK_ANSI_M]='m',
  [c.kVK_ANSI_N]='n',
  [c.kVK_ANSI_O]='o',
  [c.kVK_ANSI_P]='p',
  [c.kVK_ANSI_Q]='q',
  [c.kVK_ANSI_R]='r',
  [c.kVK_ANSI_S]='s',
  [c.kVK_ANSI_T]='t',
  [c.kVK_ANSI_U]='u',
  [c.kVK_ANSI_V]='v',
  [c.kVK_ANSI_W]='w',
  [c.kVK_ANSI_X]='x',
  [c.kVK_ANSI_Y]='y',
  [c.kVK_ANSI_Z]='z',
  [c.kVK_ANSI_0]='0',
  [c.kVK_ANSI_1]='1',
  [c.kVK_ANSI_2]='2',
  [c.kVK_ANSI_3]='3',
  [c.kVK_ANSI_4]='4',
  [c.kVK_ANSI_5]='5',
  [c.kVK_ANSI_6]='6',
  [c.kVK_ANSI_7]='7',
  [c.kVK_ANSI_8]='8',
  [c.kVK_ANSI_9]='9',

  [c.kVK_ANSI_Grave]       ='`',
  [c.kVK_ANSI_Equal]       ='=',
  [c.kVK_ANSI_Minus]       ='-',
  [c.kVK_ANSI_RightBracket]=']',
  [c.kVK_ANSI_LeftBracket] = '[',
  [c.kVK_ANSI_Quote]       ='\'',
  [c.kVK_ANSI_Semicolon]   =';',
  [c.kVK_ANSI_Backslash]   ='\\',
  [c.kVK_ANSI_Comma]       =',',
  [c.kVK_ANSI_Slash]       ='/',
  [c.kVK_ANSI_Period]      ='.',
  [c.kVK_ISO_Section]      ='ยง',
  -- break
  [c.kVK_F1]='f1',
  [c.kVK_F2]='f2',
  [c.kVK_F3]='f3',
  [c.kVK_F4]='f4',
  [c.kVK_F5]='f5',
  [c.kVK_F6]='f6',
  [c.kVK_F7]='f7',
  [c.kVK_F8]='f8',
  [c.kVK_F9]='f9',
  [c.kVK_F10]='f10',
  [c.kVK_F11]='f11',
  [c.kVK_F12]='f12',
  [c.kVK_F13]='f13',
  [c.kVK_F14]='f14',
  [c.kVK_F15]='f15',
  [c.kVK_F16]='f16',
  [c.kVK_F17]='f17',
  [c.kVK_F18]='f18',
  [c.kVK_F19]='f19',
  [c.kVK_F20]='f20',

  [c.kVK_ANSI_KeypadDecimal] ='pad.',
  [c.kVK_ANSI_KeypadMultiply]='pad*',
  [c.kVK_ANSI_KeypadPlus]    ='pad+',
  [c.kVK_ANSI_KeypadDivide]  ='pad/',
  [c.kVK_ANSI_KeypadMinus]   ='pad-',
  [c.kVK_ANSI_KeypadEquals]  ='pad=',
  [c.kVK_ANSI_Keypad0]       ='pad0',
  [c.kVK_ANSI_Keypad1]       ='pad1',
  [c.kVK_ANSI_Keypad2]       ='pad2',
  [c.kVK_ANSI_Keypad3]       ='pad3',
  [c.kVK_ANSI_Keypad4]       ='pad4',
  [c.kVK_ANSI_Keypad5]       ='pad5',
  [c.kVK_ANSI_Keypad6]       ='pad6',
  [c.kVK_ANSI_Keypad7]       ='pad7',
  [c.kVK_ANSI_Keypad8]       ='pad8',
  [c.kVK_ANSI_Keypad9]       ='pad9',
  [c.kVK_ANSI_KeypadClear]   ='padclear',
  [c.kVK_ANSI_KeypadEnter]   ='padenter',

  [c.kVK_Return]       ='return',
  [c.kVK_Tab]          ='tab',
  [c.kVK_Space]        ='space',
  [c.kVK_Delete]       ='delete',
  [c.kVK_Escape]       ='escape',
  [c.kVK_Help]         ='help',
  [c.kVK_Home]         ='home',
  [c.kVK_PageUp]       ='pageup',
  [c.kVK_ForwardDelete]='forwarddelete',
  [c.kVK_End]          ='end',
  [c.kVK_PageDown]     ='pagedown',
  [c.kVK_LeftArrow]    ='left',
  [c.kVK_RightArrow]   ='right',
  [c.kVK_DownArrow]    ='down',
  [c.kVK_UpArrow]      ='up',

  [c.kVK_Command] ='command',
  [c.kVK_Shift]   ='shift',
  [c.kVK_CapsLock]='capslock',
  [c.kVK_Option]  ='option',
  [c.kVK_Control] ='control',
  [c.kVK_Function]='fn',
--276:  kVK_RightShift                = 0x3C,
--277:  kVK_RightOption               = 0x3D,
--278:  kVK_RightControl              = 0x3E,
}
local validKeys={}
for k,v in pairs(VKs) do table.insert(validKeys,'"'..v..'"') end
local validKeysString=table.concat(validKeys,', ')
---@type hm.keyboard.keys
local keys=coll.merge(VKs,coll.toIndex(VKs))
keys.esc=c.kVK_Escape
keys.cmd=c.kVK_Command
keys.ctrl=c.kVK_Control
keys.alt=c.kVK_Option

setmetatable(keys,{__tostring=function()return validKeysString end,
  __index=function(t,k) errorf('No such %s: %s',type(k)=='string' and 'key' or 'key code',k) end,order=keyOrder})

return keys
